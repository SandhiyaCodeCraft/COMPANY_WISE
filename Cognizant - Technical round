1.
You are developing a weather analysis tool for a local meteorological department. Your tool is designed to analyze temperature readings from various days to understand the variation in temperatures over a specific period. 
The department wants to quantify how much temperatures differ from one day to another. 
Your task is to find and return an integer value representing the sum of the squares of the differences in temperature readings for every unique pair of days in the given temperature array.

Input Specification:
 input1 : An integer array representing the temperature reading of a particular day.
 input2: An integer value representing the size of the array.
 Output Specification: Return an integer value representing the sum of the squares of the differences in temperature readings for every unique pair of days in the given temperature array.

 Example 1:
 input1: {1, 2, 3} 
 input2 : 3
 Output: 6

import math
l=list(map(int,input().split()))
d=set()
s=0
for i in range(len(l)):
    for j in range(i+1,len(l)):
        sub=(l[i],l[j])
        if sub not in d:
            s+=int(math.pow((l[i]-l[j]),2))
            d.add(sub)
print(s)

2.A poet has asked you for assistance in writing poems. He has given you a string S and a dictionary D and he asks you to find, from the dictionary, a word which rhymes best with S. Words are said to rhyme when the last syllables of the words are the same, like "cave" and "gave", or "typical" and "critical." The words will be deemed to rhyme best if the last few characters of the words match the most. Your task is to find and return a string value denoting the word which rhymes best with S, from the dictionary D. If no such word is found, return the string "No Word". 
Note: If all the characters match, it is the same word and not a rhyming word.
 • All the given words are in lowercase. • If multiple rhyming words are found, then choose the word with the least index. 
Input Specification: 
input1: A string value S, representing a single word
 input2: A string array D, representing the dictionary
 input3: An integer value representing the length of array D 
Output Specification: Return a string value denoting the word which rhymes best with S from the dictionary D. If no such word is found, return the string "No Word". 
Example 1: 
input1: thunder 
input2: (puzzle, thunder, powder, blender, under) 
input3: 5
 Output: under 

def rhyme(s,l):
    def most_rhyme(S,s):
        i,j=len(S)-1,len(s)-1
        c=0
        while i>=0 and j>=0:
            if S[i]!=s[j]:
                return c
            else:
                c+=1
                i-=1
                j-=1
        return c...................eg. Thunder,under...till under c incremented....and there is no char ..so here c is returned
    maxi=0
    res='no word'
    for i in l:
        if i!=s:
            r=most_rhyme(i,s)
            if r>maxi:............. If multiple rhyming words are found, then choose the word with the least index. 
                maxi=r
                res=i
    return res
s=input()
l=list(map(str,input().split()))
print(rhyme(s,l))
