2.
n1=int(input("Enter no of pizzas:"))
n2=int(input("Enter no of puffs:"))
n3=int(input("Enter no of drinks:"))
tp=n1*100
tpu=n2*20
td=n3*10
s=tp+tpu+td
print("Total price =",s)

3.
n=int(input())
s=str(n)
l=[s[i:i+2] for i in range(0,len(s),2)]
for i in l:
    print(i,"-",chr(int(i)))



VIDEOS:
1.Return the count if left + right = that element in array

li=[1,2,1,3,5,2,4,2,3,1]
c=0
for i in range(1,len(li)-1):
    l=i-1
    r=i+1
    if li[i]==li[l]+li[r]:
        c+=1
print(c).....................o/p:4

2. 1
  2 1 2
 3 2 1 2 3

n = int(input("Enter pyramid height: "))
total_sum = 0
for i in range(1, n + 1):
    row = list(range(i, 0, -1)) + list(range(2, i + 1))  # e.g., 3 2 1 2 3
    total_sum += sum(row)
print("Sum:", total_sum)

3.You are playing a game and want to cross as many levels as possible in the game. To advance from one level to another, these are the rules:
A player has an initial energy N.From level i, you have to spend the highest power of 2, i.e., X, from the current level in order to go to the next level.
The value of X is then concatenated to the score for each level you cross.Your task is to find and return an integer value representing the final concatenated score by crossing the maximum possible levels with the given initial energy.

import math

def highlevel(n):
    if n == 0:
        return ""
    
    max_pow = 2 ** int(math.log(n,2))  # Find the highest power of 2 â‰¤ n................if want highest pow of 3......use 3**int(math.log(n,3))
    return str(max_pow) + highlevel(n - max_pow)

n = int(input())
print(highlevel(n))

